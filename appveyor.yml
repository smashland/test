
environment:
  PYTHON_V: 3.8

  matrix:
  - job_name: windows
    image: Visual Studio 2022
  - job_name: macos
    appveyor_build_worker_image: macos-monterey # macos-bigsur (macOS 11 not support by brew any longer)

version: '{build}'

skip_tags: true
clone_depth: 1

init:
  # Sets the commit hash to "build version number" shown in appveyor build status, the build number keeps it unique
  - ps: Update-AppveyorBuild -Version "$($env:APPVEYOR_REPO_COMMIT.substring(0,7)) ($env:APPVEYOR_BUILD_NUMBER)"
  # Env used to enable artifact upload for PR builds by providing a valid file name, invalid for REPO builds
  - ps: |
      $env:artifact_prefix = 'roasthead'
      if ([bool]$env:APPVEYOR_PULL_REQUEST_NUMBER -eq $true) {
        $env:artifact_prefix = 'roasthead'
      }
      
branches:
  only:
    - master
    - main

stack:
  python ${PYTHON_V}

for:
-
  matrix:
    only:
      - job_name: windows
    fast_finish: false

  environment:
    PYTHON_V: 3.8
    QT_PATH: "D:/Qt/5.15.2/msvc2019_64"  #there is no msvc2022_64 under /qt*
    PYQT: "6"
    PYUIC: "pyuic6.exe"
    BUILD_PYINSTALLER: "True"
    ARTISAN_LEGACY: "False"
    VC_REDIST: "https://aka.ms/vs/17/release/vc_redist.x64.exe"  #redistributable for VS 2015-2022
    VCVARSALL: "D:/Program Files/Microsoft Visual Studio/2022/Community/VC/Auxiliary/Build/vcvarsall.bat"

  install:
    - cmd: echo Windows Install

    - ps: |
        if (Test-Path env:PYUPGRADE_WIN_V) {
            $env:PREV_PYTHON_V = $env:PYTHON_V
            $env:PYTHON_V = ($env:PYUPGRADE_WIN_V -split '\.')[0..1] -join '.'
        }

    - ps: $env:PYTHON_PATH = "C:/Python$($env:PYTHON_V -replace '\.','')-x64"
    - ps: Write-Host $env:PYTHON_PATH

    - ps: $env:QT_TRANSL = "$env:PYTHON_PATH/Lib/site-packages/PyQt6/Qt6/translations"

    - ps: $env:PYINSTALLER_VER = Select-String -Path ./src/requirements.txt "pyinstaller==([\d\.]*).*platform_system='Windows'" -List | ForEach-Object {$_.Matches.Groups[1].Value}
    - ps: Write-Host "PYINSTALLER_VER= $env:PYINSTALLER_VER"

    - cmd: set PATH=%PYTHON_PATH%;%PYTHON_PATH%\Scripts;%PATH%

    - cmd: .ci/install-win.bat

  build_script:
    - cmd: echo Windows Build
    - cmd: cd src

    - ps: $YEAR=(Get-Date).year
    - ps: gc version-metadata.yml | %{ $_ -replace "yyyy", "$YEAR" } | out-file newfile -encoding ascii
    - ps: move -force newfile version-metadata.yml

    - ps: $GIT_VERSION=git rev-parse --verify --short HEAD
    - ps: gc artisanlib/__init__.py | %{ $_ -replace "__revision__ = '.*'", "__revision__ = '$GIT_VERSION'" } | out-file newfile -encoding ascii
    - ps: move -force newfile artisanlib/__init__.py

    - cmd: build-win3-pi.bat
    #  test_script:
    #    - cmd: python -m unittest discover

  artifacts:
    #    - path: 'generated-win.zip'
    - path: 'src\%artifact_prefix%-win*setup.exe'

  deploy_script:
    - cmd: bash ../.ci/upload.sh roasthead-win*setup.exe
-
  matrix:
    only:
      - job_name: macos
    fast_finish: false

  environment:
    ARTISAN_OS: macos
    MACOSX_DEPLOYMENT_TARGET: 11.0
    PYTHONSITEPKGS: /Users/appveyor/venv${PYTHON_V}/lib/python${PYTHON_V}/site-packages
    QT_PATH: ${PYTHONSITEPKGS}/PyQt6/Qt6
    QT_SRC_PATH: /Users/appveyor/Qt/6.6/macos
    PYUIC: pyuic6
    PYLUPDATE: ./pylupdate6pro.py  #the dot slash is necessary

  install:
    - echo "MacOS Install"
    - chmod +x .ci/*.sh

    # update the __revision__ field with the left seven of the GIT commit hash
    - export GIT_VERSION=`git rev-parse --verify --short HEAD 2>/dev/null|| echo "???"`
    - sed -i'' -e "s/__revision__ = '.*'/__revision__ = '$GIT_VERSION'/" src/artisanlib/__init__.py

    # run the install script
    - .ci/install-macos.sh
    - export PATH=/Users/appveyor/venv${PYTHON_V}/bin:${PATH} # required after updating Python in venv

  build_script:
    - echo "MacOS Build"
    - chmod +x src/*.sh
    - chmod +x src/pylupdate6pro.py

    # run the build script
    - cd src
    - ./build-macos3.sh

# unit test fails as it runs on Py3.9 while the build installs under brew installed Py3.10 (see build-mac3.py)
#  test_script:
#    - python -m unittest discover -s src

  artifacts:
#    - path: 'generated-macos.zip'
    - path: 'src/%artifact_prefix%-*.dmg'

  deploy_script:
    # we upgrade libidn2 and curl to prevent issues caused by the previous python update
    # on running curl for later upload (libunistring.2.dylib not found)
    # this is done here after generating the build to prevent SSL issues
    - brew upgrade libidn2 # 2.3.4 -> 2.3.4_1
    - ../.ci/upload.sh roasthead-*.dmg

#  # uncomment this section for vnc or ssh connection to the build image
#  on_finish:
#    - sh: export APPVEYOR_VNC_BLOCK=true
#    - sh: curl -sflL 'https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-vnc.sh' | bash -e -
#    #- sh: curl -sflL 'https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-ssh.sh' | bash -e -